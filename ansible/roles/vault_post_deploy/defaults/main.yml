---
# defaults file for vault_post_deploy
vault_post_deploy_pod_label_selector: "app.kubernetes.io/name=vault,component=server"
vault_post_deploy_init_pod: "{{ vault_helm_release_name | default('vault') }}-0" # Pod to initialize
vault_post_deploy_unseal_keys_shares: 5
vault_post_deploy_unseal_keys_threshold: 3

# Delays and retries for checking pod status
vault_post_deploy_pod_ready_retries: 30
vault_post_deploy_pod_ready_delay: 10 # seconds

# Variables to store initialization output (will be set as facts)
# vault_root_token: ""
# vault_unseal_keys: []

# Control whether to manage secrets for unseal keys and root token
vault_manage_init_secrets: true
vault_init_secrets_name_prefix: "vault-init-credentials"
# K8s secret type, 'Opaque' or specific type if your operator/tool expects one
vault_init_secrets_type: "Opaque"

# Auto unseal configuration (set these if using auto-unseal)
vault_auto_unseal_enabled: "{{ true if (github_event_inputs_auto_unseal | default(false) | bool) else false }}"
# cloud_provider: "{{ github_event_inputs_cloud_provider | default('none') }}" # aws, gcp, azure - Handled by Helm values

# Kubernetes auth method configuration
vault_configure_kube_auth: true
vault_kube_auth_path: "kubernetes" # Path where the auth method will be enabled
vault_kube_auth_description: "Kubernetes auth method for OpenShift cluster"

# Name of the secret holding the Service Account token for Kubernetes auth configuration
vault_k8s_auth_sa_token_secret_name: "vault-auth-sa-token"

# Kubernetes API host and issuer for Vault K8s auth method config
# These are common defaults but might need to be adjusted for specific cluster configurations.
vault_kube_api_host: "https://kubernetes.default.svc"
vault_kube_issuer: "https://kubernetes.default.svc.cluster.local"

# Role configuration for Kubernetes auth
# These are examples; users should override them with their specific needs.
vault_kube_auth_role_name: "default-role" # Name of the Vault role to create
vault_kube_auth_role_bound_service_account_names: ["default"] # K8s SA names allowed to use this role
vault_kube_auth_role_bound_service_account_namespaces: ["{{ vault_namespace }}"] # K8s namespaces allowed
vault_kube_auth_role_policies: ["default"] # Vault policies to assign to tokens from this role
vault_kube_auth_role_token_ttl: "1h" # TTL for tokens issued by this role

# Kubernetes API endpoint and CA details (often discovered or from well-known location)
# vault_kube_api_url: "https://kubernetes.default.svc" # Default internal k8s API
# vault_kube_ca_cert_path: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt" # Path inside Vault pod
# vault_kube_sa_token_reviewer_jwt: "" # JWT of a SA that can review tokens (TokenReview API)
# If vault_kube_sa_token_reviewer_jwt is empty, Vault will use its own SA token if it has permissions.

