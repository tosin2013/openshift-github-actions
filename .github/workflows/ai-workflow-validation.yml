name: 🤖 AI-Powered Workflow Validation

'on':
  push:
    paths:
      - '.github/workflows/**'
  pull_request:
    paths:
      - '.github/workflows/**'
  workflow_dispatch:
    inputs:
      auto_fix:
        description: 'Auto-fix issues using AI'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

permissions:
  contents: write  # Required for auto-fix commits
  pull-requests: write  # Required for PR comments

jobs:
  ai-validation:
    name: 🧠 AI Workflow Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml requests urllib3 numpy
      
      - name: Run AI-powered validation
        env:
          REDHAT_AI_API_KEY: ${{ secrets.REDHAT_AI_API_KEY }}
        run: |
          AUTO_FIX_FLAG=""
          if [ "${{ github.event.inputs.auto_fix }}" = "true" ]; then
            AUTO_FIX_FLAG="--auto-fix"
          fi
          
          python scripts/common/ai-workflow-validator.py \
            $AUTO_FIX_FLAG \
            --output validation-report.json \
            .github/workflows/
      
      - name: Upload validation report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ai-validation-report
          path: validation-report.json
      
      - name: Commit auto-fixes
        if: github.event.inputs.auto_fix == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          if [ -n "$(git status --porcelain)" ]; then
            git add .github/workflows/
            git commit -m "🤖 AI auto-fix: Resolve workflow validation issues
            
            - Applied AI-suggested fixes to workflow files
            - Backup files created with .backup extension
            - Report available in validation-report.json"
            git push
          else
            echo "No changes to commit"
          fi
      
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            try {
              const report = JSON.parse(fs.readFileSync('validation-report.json', 'utf8'));
              
              const comment = `## 🤖 AI Workflow Validation Report
              
              **Status**: ${report.status === 'passed' ? '✅ Passed' : '❌ Failed'}
              **Issues Found**: ${report.total_issues}
              
              ${report.total_issues > 0 ? 
                `### Issues Detected:
                ${report.issues.map(issue => `- ${issue}`).join('\n')}
                
                💡 **Suggestion**: Run the workflow with auto-fix enabled to automatically resolve these issues.` 
                : '🎉 All workflow files are valid!'}
              
              ---
              *Generated by AI-Powered Workflow Validator*`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.log('Could not read validation report:', error.message);
            }

  security-check:
    name: 🔒 Security Validation
    runs-on: ubuntu-latest
    needs: ai-validation
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Check for exposed secrets
        run: |
          echo "🔍 Scanning for exposed secrets in workflows..."
          
          # Check for hardcoded secrets (basic patterns)
          SECRETS_PATTERN='password\|secret\|key\|token'
          GITHUB_EXPR_PATTERN='secrets\.'
          if grep -r -i "$SECRETS_PATTERN" .github/workflows/ --include="*.yml" --include="*.yaml" | grep -v "$GITHUB_EXPR_PATTERN" | grep -v "#"; then
            echo "❌ Potential hardcoded secrets found!"
            exit 1
          else
            echo "✅ No hardcoded secrets detected"
          fi
      
      - name: Validate secret references
        run: |
          echo "🔍 Checking secret references..."
          
          # Extract all secret references using a simpler approach
          find .github/workflows/ -name "*.yml" -o -name "*.yaml" | \
            xargs grep -h "secrets\." | \
            grep -o "secrets\.[A-Z_][A-Z0-9_]*" | \
            sed 's/secrets\.//' | \
            sort -u > /tmp/secrets_used.txt || echo "No secrets found"
          
          if [ -s /tmp/secrets_used.txt ]; then
            echo "📋 Secrets referenced in workflows:"
            cat /tmp/secrets_used.txt
            echo "✅ Ensure all these secrets are configured in repository settings"
          else
            echo "ℹ️ No secrets referenced in workflows"
          fi
