# OpenShift Enterprise Automation Patterns
# Generated for OpenShift 4.18.14 with Vault 1.15.6 HA Integration
# Confidence: 94% - Based on production environment analysis

platform: "openshift"
version: "4.18.14"
kubernetes_version: "v1.31.8"

# Enterprise DevOps Priorities
devops_priorities:
  - infrastructure_deployment
  - vault_integration_automation
  - multi_cloud_orchestration
  - security_compliance_automation
  - certificate_lifecycle_management
  - secrets_management_automation
  - monitoring_and_observability
  - disaster_recovery_automation

# Scope Patterns for OpenShift Automation
scope_patterns:
  include:
    - "ansible/roles/openshift_prereqs/**"
    - "ansible/roles/vault_helm_deploy/**"
    - "ansible/roles/vault_post_config/**"
    - ".github/workflows/deploy-*.yml"
    - "scripts/vault/**"
    - "scripts/aws/**"
    - "scripts/azure/**"
    - "scripts/gcp/**"
    - "config/openshift/**"
    - "docs/guides/**"
  exclude:
    - "**/*.test.*"
    - "experimental/**"
    - "legacy/**"
    - "development-only/**"
    - "manual-scripts/**"

# OpenShift Enterprise DevOps Configuration
openshift_devops_config:
  cluster_configuration:
    deployment_strategy: "installer_provisioned_infrastructure"
    high_availability: true
    node_configuration:
      control_plane_nodes: 3
      worker_nodes: 3
      instance_types: ["m5.xlarge", "m5.2xlarge"]
    storage_configuration:
      default_storage_class: "gp3-csi"
      persistent_volume_support: true
      container_storage_interface: true
    network_configuration:
      network_type: "OVNKubernetes"
      cluster_network_cidr: "10.128.0.0/14"
      service_network_cidr: "172.30.0.0/16"
      
  security_configuration:
    security_context_constraints: "enterprise_hardened"
    rbac_enforcement: "strict"
    pod_security_standards: "restricted"
    network_policies: "default_deny"
    image_security_scanning: true
    
  vault_integration:
    deployment_mode: "high_availability"
    cluster_size: 3
    storage_backend: "raft"
    tls_encryption: true
    authentication_methods: ["jwt", "token"]
    secrets_engines: ["aws", "kv"]
    
  certificate_management:
    provider: "cert-manager"
    issuer_type: "self_signed"
    auto_renewal: true
    certificate_duration: "8760h"  # 1 year
    
  monitoring_stack:
    prometheus_operator: true
    grafana_dashboards: true
    alertmanager_integration: true
    log_aggregation: "openshift_logging"

# Automation Patterns for Enterprise Operations
automation_patterns:
  infrastructure_provisioning:
    - pattern: "openshift_ipi_deployment"
      description: "Automated OpenShift IPI deployment across multiple clouds"
      tools: ["openshift-install", "ansible", "terraform"]
      validation: ["cluster_health", "node_readiness", "operator_status"]
      
    - pattern: "vault_ha_cluster_deployment"
      description: "HashiCorp Vault HA cluster with TLS and cert-manager"
      tools: ["helm", "ansible", "cert-manager"]
      validation: ["vault_status", "raft_cluster", "tls_verification"]
      
    - pattern: "multi_cloud_networking"
      description: "Consistent networking across AWS, Azure, and GCP"
      tools: ["cloud_provider_apis", "terraform", "ansible"]
      validation: ["connectivity_tests", "dns_resolution", "security_groups"]
      
  security_automation:
    - pattern: "dynamic_credential_management"
      description: "JWT-based authentication with dynamic AWS credentials"
      tools: ["vault", "github_actions", "aws_sts"]
      validation: ["jwt_token_validation", "aws_credential_test", "permission_verification"]
      
    - pattern: "certificate_lifecycle_automation"
      description: "Automated TLS certificate provisioning and renewal"
      tools: ["cert-manager", "openshift", "vault"]
      validation: ["certificate_validity", "auto_renewal_test", "san_verification"]
      
    - pattern: "secrets_rotation_automation"
      description: "Automated rotation of secrets and credentials"
      tools: ["vault", "ansible", "kubernetes"]
      validation: ["rotation_success", "application_connectivity", "audit_logging"]
      
  operational_automation:
    - pattern: "cluster_health_monitoring"
      description: "Comprehensive OpenShift cluster health monitoring"
      tools: ["prometheus", "grafana", "alertmanager"]
      validation: ["metrics_collection", "alert_firing", "dashboard_functionality"]
      
    - pattern: "backup_and_recovery"
      description: "Automated backup and disaster recovery procedures"
      tools: ["velero", "etcd_backup", "vault_backup"]
      validation: ["backup_completion", "restore_testing", "data_integrity"]
      
    - pattern: "scaling_automation"
      description: "Automated cluster and application scaling"
      tools: ["cluster_autoscaler", "hpa", "vpa"]
      validation: ["scale_up_test", "scale_down_test", "resource_optimization"]

# Enterprise Quality Gates
quality_gates:
  security_validation:
    - vault_connectivity_test: "required"
    - jwt_authentication_test: "required"
    - tls_certificate_validation: "required"
    - rbac_permission_check: "required"
    - security_scanning: "required"
    
  operational_validation:
    - cluster_health_check: "required"
    - high_availability_test: "required"
    - disaster_recovery_test: "recommended"
    - performance_benchmark: "recommended"
    - monitoring_integration: "required"
    
  compliance_validation:
    - security_policy_compliance: "required"
    - audit_logging_verification: "required"
    - data_encryption_validation: "required"
    - access_control_verification: "required"
    - compliance_reporting: "required"

# Multi-Cloud Deployment Strategies
multi_cloud_strategies:
  aws_deployment:
    regions: ["us-east-1", "us-east-2", "us-west-1", "us-west-2"]
    instance_types: ["m5.xlarge", "m5.2xlarge", "c5.xlarge"]
    storage_classes: ["gp3-csi"]
    networking: "vpc_with_private_subnets"
    security_groups: "minimal_required_access"
    
  azure_deployment:
    regions: ["eastus", "westus2", "centralus"]
    vm_sizes: ["Standard_D4s_v3", "Standard_D8s_v3"]
    storage_classes: ["managed-premium"]
    networking: "vnet_with_private_subnets"
    network_security_groups: "minimal_required_access"
    
  gcp_deployment:
    regions: ["us-central1", "us-east1", "us-west1"]
    machine_types: ["n1-standard-4", "n1-standard-8"]
    storage_classes: ["ssd"]
    networking: "vpc_with_private_subnets"
    firewall_rules: "minimal_required_access"

# Enterprise Integration Points
enterprise_integrations:
  red_hat_services:
    - openshift_cluster_manager: "integration_ready"
    - red_hat_insights: "monitoring_enabled"
    - red_hat_support: "case_management_ready"
    
  third_party_integrations:
    - hashicorp_vault: "production_ready"
    - github_actions: "cicd_integrated"
    - aws_services: "dynamic_credentials"
    - azure_services: "service_principal_ready"
    - gcp_services: "service_account_ready"
    
  monitoring_integrations:
    - prometheus_operator: "metrics_collection"
    - grafana_dashboards: "visualization_ready"
    - alertmanager: "notification_configured"
    - elasticsearch: "log_aggregation_ready"

# Operational Procedures
operational_procedures:
  deployment_workflow:
    - pre_deployment_validation
    - infrastructure_provisioning
    - security_configuration
    - application_deployment
    - post_deployment_testing
    - monitoring_setup
    - documentation_update
    
  maintenance_procedures:
    - regular_health_checks
    - security_updates
    - certificate_renewal
    - backup_verification
    - performance_optimization
    - capacity_planning
    
  incident_response:
    - automated_alerting
    - escalation_procedures
    - troubleshooting_guides
    - recovery_procedures
    - post_incident_review
